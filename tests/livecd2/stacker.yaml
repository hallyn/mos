base:
  build_only: true
  from:
    type: docker
    url: "docker://zothub.io/machine/bootkit/rootfs:${{ROOTFS_VERSION}}-squashfs"

install-rootfs-pkg:
  build_only: true
  from:
    type: built
    tag: base
  run: |
    pkgtool install \
        curl \
        cryptsetup \
        dosfstools \
        e2fsprogs \
        keyutils \
        kmod \
        libsquashfs-dev \
        parted \
        tpm2-tools \
        udev

# The rootfs which we want to run on the system
target-rootfs:
  from:
    type: built
    tag: install-rootfs-pkg
  import:
    - ${{TOPDIR}}/mosctl
  run: |
    #!/bin/sh -ex
    writefile() {
      mkdir -p "${1%/*}"
      echo "write $1" 1>&2
      cat >"$1"
    }

    writefile /etc/systemd/network/20-wire-enp0s-dhcp.network <<"END"
    [Match]
    Name=enp0s*
    [Network]
    DHCP=yes
    END

    cd /stacker/imports
    cp mosctl /usr/bin
    ( cd /usr/bin && chmod 755 mosctl )
    echo root:passw0rd | chpasswd

    systemctl enable serial-getty@ttyS0

bootkit:
  from:
    type: scratch
  import:
    - path: ${{KEYSDIR}}/bootkit/kernel.efi
      dest: /bootkit/kernel.efi
    - path: ${{KEYSDIR}}/bootkit/shim.efi
      dest: /bootkit/shim.efi

install-rootfs:
  from:
    type: built
    tag: install-rootfs-pkg
  import:
    - ${{TOPDIR}}/mosctl
    - https://github.com/project-zot/zot/releases/download/v${{ZOT_VERSION}}/zot-linux-amd64-minimal
    - zot.service
    - zot-config.json
    - mos-install
    - mos-install.service
  run: |
    #!/bin/sh -ex
    writefile() {
      mkdir -p "${1%/*}"
      echo "write $1" 1>&2
      cat >"$1"
    }

    writefile /etc/systemd/network/20-wire-enp0s-dhcp.network <<"END"
    [Match]
    Name=enp0s*
    [Network]
    DHCP=yes
    END

    cd /stacker/imports
    cp mosctl mos-install /usr/bin
    ( cd /usr/bin && chmod 755 mosctl mos-install )
    cp /stacker/imports/zot-linux-amd64-minimal /usr/bin/zot
    chmod 755 /usr/bin/zot
    cp /stacker/imports/zot.service /etc/systemd/system
    mkdir -p /etc/zot
    mkdir /iso
    cp /stacker/imports/zot-config.json /etc/zot/config.json

    cp mos-install.service /etc/systemd/system/
    systemctl enable mos-install.service

    # Note - don't enable zot, as we want to start it after copying data from ISO

    echo install > /mos-action

    # work around a bootkit bug causing this dir to not be created.
    mkdir -p /boot/efi
